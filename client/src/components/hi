

Nav [
const NavItems = ({ children }) => (
    <Text mt={{ base: 4, md: 0 }} mr={6} display="block">
        {children}
    </Text>
    );

    const Nav = (props) => {
        const history = useHistory();
        const [pokemon, setPokemon] = useState(false);
        const togglePokemon = () => setPokemon(!pokemon);
    

    return (
        <Flex
        display="flex"
        as="nav"
        align="center"
        justify="space-between"
        wrap="wrap"
        padding="1.5rem"
        bg="white.500"
        color="black"
        gridArea="nav"
        // {...props}
        >
            <Link to="/">
            <Flex align="center" mr={5}>
                <Icon name="view" mr={2} size={"1.5em"} color="red.400" />
                <Heading
                as="h1"
                size="lg"
                letterSpacing={"-.1rem"}
                color="yellow.200"
                >
                    Pokedex
                </Heading>
            </Flex>
            </Link>
            <Box display={{ base: "block", md: "none" }}>
            <title>Menu</title>
            </Box>
            <Box
            // display={{ sm: show ? "block" : "none", md: "flex" }}
            width={{ sm: "full", md: "auto" }}
            alignItems="flex-end"
            flexGrow={1}
            bg="yellow.500"
            zIndex={2}
            >
            </Box>
        </Flex>
    );
    }
]
App.js [
<>
    <Router>
      <Switch>
      <Route exact path="/">
         <Search />
        </Route>
        <Route/>
        <Route path="/login">
          <handleLoginSubmit>

          </handleLoginSubmit>
        </Route>
          <handleRegisterSubmit>
          </handleRegisterSubmit>
        <Route path="/register">
        </Route>
        </Switch>
      </Router>
      </>
]

<Route path="/register" render={()=> 
      <Register handleRegisterSubmit={this.handleRegisterSubmit}/>}/>